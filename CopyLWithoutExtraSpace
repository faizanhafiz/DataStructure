/*
// Definition for a Node.
class Node {
    int val;
    Node next;
    Node random;

    public Node(int val) {
        this.val = val;
        this.next = null;
        this.random = null;
    }
}
*/

class Solution {
    public Node copyRandomList(Node head) {
        if(head==null ) return head;
        Node curr = head;
        Node forw =null;
        while(curr!=null)
        {
            
        forw = curr.next;
        Node newNode = new Node(curr.val);
        curr.next= newNode;
        newNode.next= forw;
        curr=forw;
            
            
        }
        
        curr = head;
        while(curr!=null)
        {
            
           Node random = curr.random;
            curr.next.random = random!=null?random.next:null;
            curr=curr.next.next;
            
            
        }
        
       curr =head;
        Node dummyNode = new Node(-1);
        Node prev= dummyNode;
        while(curr!=null)
        {
           prev.next=curr.next;
            curr.next=curr.next.next;
            prev=prev.next;
            curr=curr.next;
            
        }
        prev.next=null;
        return dummyNode.next;
        
    }
}
